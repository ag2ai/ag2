name: OpenAI & Co

on:
  pull_request:
    branches: ["main"]
    paths:
      - "autogen/**"
      - "test/**"
      - "notebook/agentchat_auto_feedback_from_code_execution.ipynb"
      - "notebook/agentchat_function_call.ipynb"
      - "notebook/agentchat_groupchat_finite_state_machine.ipynb"
      - ".github/workflows/openai.yml"
permissions:
  {}
  # actions: read
  # checks: read
  # contents: read
  # deployments: read

jobs:
  setup:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ${{ matrix.os }}
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install packages and dependencies
        run: |
          docker --version
          uv pip install --system -e ".[test,gemini]"
          python -c "import autogen"
      - name: Install packages for test when needed
        if: matrix.python-version == '3.9'
        run: |
          uv pip install --system docker
          uv pip install --system -e .[redis,interop]
      - name: Not LLM Tests
        run: bash scripts/test.sh test -m "not llm" --ignore=test/agentchat/contrib --durations=10 --durations-min=1.0
      - name: OpenAI Tests
        run: bash scripts/test.sh test -m "openai" --durations=10 --durations-min=1.0
      - name: Gemini Tests
        run: bash scripts/test.sh test -m "gemini" --durations=10 --durations-min=1.0
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
