default_language_version:
  python: python3
exclude: 'dotnet'
ci:
  autofix_prs: true
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit suggestions'
  autoupdate_schedule: 'monthly'

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    - id: check-added-large-files
      stages: [pre-commit, pre-merge-commit, manual]
    - id: check-ast
      stages: [pre-commit, pre-merge-commit, manual]
    - id: check-yaml
      stages: [pre-commit, pre-merge-commit, manual]
    - id: check-toml
      stages: [pre-commit, pre-merge-commit, manual]
    - id: check-json
      stages: [pre-commit, pre-merge-commit, manual]
      exclude: |
        (?x)^(
          .devcontainer/.*devcontainer\.json |
          ^notebook/agentchat_pdf_rag/(parsed_elements|processed_elements)\.json$
        )$
    - id: check-byte-order-marker
      stages: [pre-commit, pre-merge-commit, manual]
      exclude: .gitignore
    - id: check-merge-conflict
      stages: [pre-commit, pre-merge-commit, manual]
    - id: detect-private-key
      stages: [pre-commit, pre-merge-commit, manual]
    - id: trailing-whitespace
      stages: [pre-commit, pre-merge-commit, manual]
    - id: end-of-file-fixer
      stages: [pre-commit, pre-merge-commit, manual]
    - id: no-commit-to-branch
      stages: [pre-commit, pre-merge-commit, manual]
  - repo: local
    hooks:
      - id: build-setup-scripts
        name: build setup scripts
        stages: [pre-commit, pre-merge-commit, manual]
        entry: "scripts/pre-commit-build-setup-files.sh"
        language: python
        #        language_version: python3.9
        types: [python]
        require_serial: true
        verbose: true
        additional_dependencies: ['jinja2', 'toml', 'ruff']
  - repo: local
    hooks:
      - id: lint
        name: linting and formatting
        stages: [pre-commit, pre-merge-commit, manual]
        entry: "scripts/pre-commit-lint.sh"
        language: python
        #        language_version: python3.9
        types: [python]
        require_serial: true
        verbose: true
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        stages: [pre-commit, pre-merge-commit, manual]
        additional_dependencies:
        - tomli
        # args: ["-L", "ans,linar,nam,tread,ot,assertIn,dependin,socio-economic,Regio"]
        # ./notebook,./website/node_modules,./website/notebooks
        exclude: |
            (?x)^(
              # notebook/.* |
              notebook/agentchat_lmm_gpt-4v.ipynb |
              notebook/agentchat_graph_rag_neo4j.ipynb |
              notebook/agentchat_swarm_graphrag_telemetry_trip_planner.ipynb |
              website/node_modules/.* |
              website/notebooks/.*
            )$
  # See https://jaredkhan.com/blog/mypy-pre-commit
  - repo: local
    hooks:
    - id: mypy
      name: mypy
      stages: [pre-commit, pre-merge-commit]
      entry: "./scripts/pre-commit-mypy-run.sh"
      language: python
      # use your preferred Python version
      # language_version: python3.9
      additional_dependencies: []
      types: [python]
      # use require_serial so that script
      # is only called once per commit
      require_serial: true
      # Print the number of files as a sanity-check
      verbose: true
    - id: check-license-headers
      name: check license headers
      stages: [pre-commit, pre-merge-commit, manual]
      entry: python ./scripts/pre-commit-license-check.py
      language: python
      types: [python]
      exclude: |
        (?x)^(
          notebook/.* |
          website/.*
        )$

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        stages: [pre-commit, pre-merge-commit, manual]
        args: ["--baseline", ".secrets.baseline"]
        exclude: |
          (?x)^(
              package.lock.json
          )$

  - repo: local
    hooks:
      - id: generate-devcontainer-files
        name: Generate devcontainer files
        stages: [pre-commit, pre-merge-commit, manual]
        entry: "scripts/devcontainer/generate-devcontainers.sh"
        language: python
        require_serial: true
        verbose: true
        additional_dependencies: ['jinja2']
        files: ^(scripts/devcontainer/.*)$
